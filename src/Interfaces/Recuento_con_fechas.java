/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Variables.Var;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author PORTATIL
 */
public class Recuento_con_fechas extends javax.swing.JInternalFrame {

    public Var var;
    public String resultados[][];

    /**
     * Creates new form NewJInternalFrame
     *
     * @param v
     */
    public Recuento_con_fechas(Var v) {
        initComponents();
        var = v;
        Carga_componetes();
        Componentes_SetEnable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTFCajas = new javax.swing.JTextField();
        jTFDisplays = new javax.swing.JTextField();
        jTFUnidades = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        JTFTotal = new javax.swing.JTextField();
        jtdia = new javax.swing.JTextField();
        jtmes = new javax.swing.JTextField();
        jtaño = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jBEditar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        JTFCodigo = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        filtra_sin_saldo = new javax.swing.JToggleButton();
        Filra_los_que_cuaadran = new javax.swing.JToggleButton();
        txt_consulta = new javax.swing.JTextField();
        consulta = new javax.swing.JToggleButton();
        recalcula = new javax.swing.JButton();
        jComboBox4 = new javax.swing.JComboBox<>();
        Igv = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setClosable(true);
        setMaximizable(true);
        setTitle("Recuento");
        setPreferredSize(new java.awt.Dimension(1280, 596));

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel2FocusGained(evt);
            }
        });

        jLabel3.setText("      CAJAS        DISPLAYS   UNIDADES");

        jTFCajas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTFCajas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFCajasFocusGained(evt);
            }
        });
        jTFCajas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFCajasKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFCajasKeyPressed(evt);
            }
        });

        jTFDisplays.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTFDisplays.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFDisplaysFocusGained(evt);
            }
        });
        jTFDisplays.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFDisplaysKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFDisplaysKeyPressed(evt);
            }
        });

        jTFUnidades.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTFUnidades.setText("0");
        jTFUnidades.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFUnidadesFocusGained(evt);
            }
        });
        jTFUnidades.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFUnidadesKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFUnidadesKeyPressed(evt);
            }
        });

        jButton2.setText("Borrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        JTFTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        JTFTotal.setText("0");
        JTFTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFTotalActionPerformed(evt);
            }
        });
        JTFTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JTFTotalKeyPressed(evt);
            }
        });

        jtdia.setText("jTextField1");
        jtdia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtdiaFocusGained(evt);
            }
        });
        jtdia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtdiaKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtdiaKeyPressed(evt);
            }
        });

        jtmes.setText("jTextField1");
        jtmes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtmesFocusGained(evt);
            }
        });
        jtmes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtmesKeyPressed(evt);
            }
        });

        jtaño.setText("jTextField1");
        jtaño.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtañoFocusGained(evt);
            }
        });
        jtaño.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtañoKeyPressed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Fecha");

        jBEditar.setText("Editar");
        jBEditar.setEnabled(false);
        jBEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarActionPerformed(evt);
            }
        });

        jButton4.setText("Graba");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jtdia, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jtmes, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBEditar, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(jtaño))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTFCajas, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFDisplays, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JTFTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jLabel2)
                    .addComponent(jBEditar)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFCajas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFDisplays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JTFTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtdia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtmes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtaño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JTFCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                JTFCodigoFocusGained(evt);
            }
        });
        JTFCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFCodigoActionPerformed(evt);
            }
        });
        JTFCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JTFCodigoKeyPressed(evt);
            }
        });

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("CODIGO");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JTFCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(JTFCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(51, 204, 0));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("FECHA DE RECUENTO");

        jLabel5.setText("LINEA");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton3.setText("OK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );

        jPanel5.setBackground(new java.awt.Color(102, 255, 102));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel6.setText("Proveedor  :");

        jLabel7.setText("jLabel7");

        jLabel8.setText("Fecha :");

        jLabel9.setText("jLabel9");

        filtra_sin_saldo.setText("filtra sin saldo");
        filtra_sin_saldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtra_sin_saldoActionPerformed(evt);
            }
        });

        Filra_los_que_cuaadran.setText("filtra los que cuadran");
        Filra_los_que_cuaadran.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Filra_los_que_cuaadranItemStateChanged(evt);
            }
        });
        Filra_los_que_cuaadran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Filra_los_que_cuaadranActionPerformed(evt);
            }
        });

        txt_consulta.setText("jTextField1");

        consulta.setText("consulta");
        consulta.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                consultaItemStateChanged(evt);
            }
        });
        consulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultaActionPerformed(evt);
            }
        });

        recalcula.setText("re-calcula");
        recalcula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recalculaActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        Igv.setText("IGV");
        Igv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IgvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(filtra_sin_saldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(recalcula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Filra_los_que_cuaadran, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_consulta)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(Igv, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(consulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_consulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recalcula)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(consulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Filra_los_que_cuaadran, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Igv))
                    .addComponent(filtra_sin_saldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );

        jPanel7.setBackground(new java.awt.Color(102, 255, 102));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("resultados"));
        jPanel7.setToolTipText("");

        jLabel10.setText("total por linea  :");

        jLabel11.setText("total contado   :");

        jLabel12.setFont(jLabel12.getFont().deriveFont(jLabel12.getFont().getSize()+5f));
        jLabel12.setText("Diferencia :");

        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField5.setText("jTextField5");

        jTextField6.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField6.setText("jTextField6");

        jTextField7.setFont(jTextField7.getFont().deriveFont(jTextField7.getFont().getSize()+5f));
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField7.setText("jTextField7");

        jTextField8.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField8.setText("0.00");

        jTextField9.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField9.setText("0.0");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("NO VENCIDO");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("VENCIDO");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField5)
                    .addComponent(jTextField6)
                    .addComponent(jTextField7, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField8)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField9)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DecimalFormat formatea = var.MyFormatter();
        Componentes_SetEnable(true);
        var.setFecha_recuento_selecionada(jComboBox1.getSelectedItem().toString());
        var.setLina_seleccionada(jComboBox2.getSelectedItem().toString());
        var.setSecuencia(0);
        carga_tabla_lista();
        carga_tabla_cuenta();
        jTextField5.setText(String.valueOf(formatea.format(var.getTotalXlinea())));
        jTextField6.setText(String.valueOf(formatea.format(var.getTotal_contado())));
        jTextField7.setText(String.valueOf(formatea.format(var.getTotal_diferencia())));

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        borra();


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTFCajasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFCajasKeyTyped
        // TODO add your handling code here:
        char[] p = {'1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '.'};
        int b = 0;
        for (int i = 0; i <= 10; i++) {
            if (p[i] == evt.getKeyChar()) {
                b = 1;
            }

        }

        if (b == 0) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jTFCajasKeyTyped

    private void JTFCodigoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_JTFCodigoFocusGained
        // TODO add your handling code here:
        JTFCodigo.selectAll();
        var.setEditando(false);
    }//GEN-LAST:event_JTFCodigoFocusGained

    private void jTFDisplaysKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFDisplaysKeyTyped
        // TODO add your handling code here:
        char[] p = {'1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '.'};
        int b = 0;
        for (int i = 0; i <= 10; i++) {
            if (p[i] == evt.getKeyChar()) {
                b = 1;
            }

        }
        if (b == 0) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jTFDisplaysKeyTyped

    private void jTFUnidadesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFUnidadesKeyTyped
        // TODO add your handling code here:
        char[] p = {'1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '.'};
        int b = 0;
        for (int i = 0; i <= 10; i++) {
            if (p[i] == evt.getKeyChar()) {
                b = 1;
            }
        }
        if (b == 0) {
            evt.consume();
            getToolkit().beep();
        }
        jButton2.setEnabled(true);
    }//GEN-LAST:event_jTFUnidadesKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int fila;
        PreparedStatement ps;

        fila = jTable1.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila.");
        } else {
            //aca toma el numero de fila seleccionada
            String numero = (String) jTable1.getValueAt(fila, 0);
            String codigo = (String) jTable1.getValueAt(fila, 1);

            var.setC_Cart_Id(codigo);
            String Recu = (String) jTable1.getValueAt(fila, 6);
            Recu = Recu.replace(",", "");
            double recu = Double.parseDouble(Recu);
            double contado = 0, saldo = 0;
            String sql = "DELETE FROM Recuento_fechas WHERE Secuencia='" + numero
                    + "' and Fecha_recuento='" + var.getFecha_recuento_selecionada() + "'";
            String sql1 = "select Nc_Alma,Nc_Alma1,Nc_Alma2 from sistema_fecha WHERE Fecha_recuento='"
                    + var.getFecha_recuento_selecionada() + "' and Cprov_Nom='"
                    + var.getLina_seleccionada() + "' and Cart_Id='" + codigo + "'";//8 campos
            try {
                // borrara el registro seleccionado
                ps = var.conectar().prepareStatement(sql);
                ps.executeUpdate();
                // hasta aca borró el registro de recuento
                // busca en sistemas el producto para restarle lo borrado
                ps = var.conectar().prepareStatement(sql1);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    var.setC_Nc_Alma(rs.getDouble("Nc_Alma"));
                    contado = rs.getDouble("Nc_Alma1");
                    saldo = rs.getDouble("Nc_Alma2");
                }
                contado = contado - recu;
                saldo = saldo + recu;
                String sSQL = "UPDATE sistema_fecha SET "
                        + "Nc_Alma1=?,Nc_Alma2=?"
                        + " WHERE Cart_Id=? and Fecha_recuento='" + var.getFecha_recuento_selecionada() + "'";
                ps = var.conectar().prepareStatement(sSQL);
                ps.setDouble(1, contado);
                ps.setDouble(2, saldo);
                ps.setString(3, var.getC_Cart_Id());

                if (ps.executeUpdate() > 0) {

                    JOptionPane.showMessageDialog(null, "Los datos han sido modificados con éxito", "Operación Exitosa",
                            JOptionPane.INFORMATION_MESSAGE);

                } else {

                    JOptionPane.showMessageDialog(null, "No se ha podido realizar la actualización de los datos\n"
                            + "Inténtelo nuevamente.", "Error en la operación",
                            JOptionPane.ERROR_MESSAGE);

                }

            } catch (SQLException ex) {
                Logger.getLogger(Recuento_con_fechas.class.getName()).log(Level.SEVERE, null, ex);
            }
            carga_tabla_lista();
            carga_tabla_cuenta();

        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTFCajasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFCajasFocusGained
        // TODO add your handling code here:
        jTFCajas.selectAll();
    }//GEN-LAST:event_jTFCajasFocusGained

    private void jTFDisplaysFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFDisplaysFocusGained
        // TODO add your handling code here:
        jTFDisplays.selectAll();
    }//GEN-LAST:event_jTFDisplaysFocusGained

    private void jTFUnidadesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFUnidadesFocusGained
        // TODO add your handling code here:
        jTFUnidades.selectAll();
    }//GEN-LAST:event_jTFUnidadesFocusGained

    private void jPanel2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel2FocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_jPanel2FocusGained

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void JTFCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTFCodigoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            carga_datos();

            cargadatos();
            cargaProducto();
            activa_ingresos();

            jtdia.requestFocusInWindow();
//        guarda();
        }

    }//GEN-LAST:event_JTFCodigoKeyPressed

    private void jTFCajasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFCajasKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTFDisplays.requestFocusInWindow();
        }
    }//GEN-LAST:event_jTFCajasKeyPressed

    private void jTFDisplaysKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFDisplaysKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (var.isUni()) {
                jTFUnidades.requestFocusInWindow();
            } else {
                calcula();//calcul combierte a unidades del sistema 
                JTFTotal.setText(String.valueOf(var.getC_total()));
                JTFTotal.requestFocusInWindow();
            }

        }
    }//GEN-LAST:event_jTFDisplaysKeyPressed

    private void jTFUnidadesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFUnidadesKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            calcula();//calcul combierte a unidades del sistema 
            JTFTotal.setText(String.valueOf(var.getC_total()));
            JTFTotal.requestFocusInWindow();

        }
    }//GEN-LAST:event_jTFUnidadesKeyPressed

    private void JTFTotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTFTotalKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            guarda_cuenta();
            jBEditar.setEnabled(false);
            JTFCodigo.selectAll();
            jTFCajas.setText("0");
            jTFDisplays.setText("0");
            jTFUnidades.setText("0");

            JTFCodigo.requestFocusInWindow();

        }
    }//GEN-LAST:event_JTFTotalKeyPressed

    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
        // TODO add your handling code here:
        jButton2.setEnabled(true);
        jBEditar.setEnabled(true);

    }//GEN-LAST:event_jTable1FocusGained

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if (jComboBox1.getSelectedItem() == null) {

        } else {
            Carga_lineas();
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jtdiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtdiaKeyTyped
        // TODO add your handling code here:
        char[] p = {'1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '.'};
        int b = 0;
        for (int i = 0; i <= 10; i++) {
            if (p[i] == evt.getKeyChar()) {
                b = 1;
            }

        }

        if (b == 0) {
            evt.consume();
            getToolkit().beep();
        }


    }//GEN-LAST:event_jtdiaKeyTyped

    private void jtdiaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtdiaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtmes.requestFocusInWindow();
        }
    }//GEN-LAST:event_jtdiaKeyPressed

    private void jtmesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtmesKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtaño.requestFocusInWindow();
        }

    }//GEN-LAST:event_jtmesKeyPressed

    private void jtañoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtañoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            java.sql.Date fven;
            var.setT_Fecha_de_vencimiento(jtaño.getText() + "-" + jtmes.getText() + "-" + jtdia.getText());

            jTFCajas.requestFocusInWindow();
        }
    }//GEN-LAST:event_jtañoKeyPressed

    private void jtdiaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtdiaFocusGained
        // TODO add your handling code here:
        jtdia.selectAll();
    }//GEN-LAST:event_jtdiaFocusGained

    private void jtmesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtmesFocusGained
        // TODO add your handling code here:
        jtmes.selectAll();
    }//GEN-LAST:event_jtmesFocusGained

    private void jtañoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtañoFocusGained
        // TODO add your handling code here:
        jtaño.selectAll();

    }//GEN-LAST:event_jtañoFocusGained

    private void Filra_los_que_cuaadranItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Filra_los_que_cuaadranItemStateChanged
        // TODO add your handling code here:
        int estado = evt.getStateChange();
        if (estado == ItemEvent.SELECTED) {
//					label1.setText("Botón seleccionado");
        } else {
//					label1.setText("Botón deseleccionado");
        }


    }//GEN-LAST:event_Filra_los_que_cuaadranItemStateChanged

    private void filtra_sin_saldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtra_sin_saldoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtra_sin_saldoActionPerformed

    private void consultaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_consultaItemStateChanged
        // TODO add your handling code here:
        int estado = evt.getStateChange();
        if (estado == ItemEvent.SELECTED) {
//					label1.setText("Botón seleccionado");
            consulta.setText("SIN CONS");
            var.setFiltro_carga_tabla(txt_consulta.getText().toUpperCase());
            carga_tabla_lista();

        } else {
//					label1.setText("Botón deseleccionado");
            consulta.setText("CONSULTA");
            var.setFiltro_carga_tabla("");
            carga_tabla_lista();
        }


    }//GEN-LAST:event_consultaItemStateChanged

    private void jBEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarActionPerformed
        // TODO add your handling code here:    int fila;
//        int fila;
//        PreparedStatement ps;
//
//        fila = jTable1.getSelectedRow();
//        if (fila == -1) {
//            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila.");
//        } else {
//            //aca toma el numero de fila seleccionada
//            String numero = (String) jTable1.getValueAt(fila, 0);
//            String codigo = (String) jTable1.getValueAt(fila, 1);
//
//            var.setC_Cart_Id(codigo);
//            String Recu = (String) jTable1.getValueAt(fila, 6);
//            Recu = Recu.replace(",", "");
//            double recu = Double.parseDouble(Recu);
//            double contado = 0, saldo = 0;
//            String sqle = "select Secuencia,Cart_Id,Cart_Nom, Nfactor_De_Venta, Nfactor_De_Consumo, "
//                    + "Nfactor_A_Reporte, Nultimo_Soles, Nprec_Consumo, "
//                    + "Nc_Alma,cajas,displays,unidades,total,total_general,"
//                    + "Fecha_de_vencimiento,Fecha_recuento,Cprov_Id,Cprov_Nom "
//                    + "from Recuento_fechas "
//                    + "WHERE Fecha_recuento='" + var.getFecha_recuento_selecionada() + "' and "
//                    + "Secuencia='" + numero + "'";//9 campos
//            PreparedStatement pse;
//
////        int campos = 8 + 1;
//            try {
//                pse = var.getCon().prepareStatement(sqle);
//                ResultSet rs = pse.executeQuery();
//
//                while (rs.next()) {
//                    var.setC_Cart_Id(rs.getNString("Cart_Id"));
//                    var.setC_Cart_Nom(rs.getNString("Cart_Nom"));
//                    var.setC_Nfactor_De_Venta(rs.getDouble("Nfactor_De_Venta"));
//                    var.setC_Nfactor_De_Consumo(rs.getDouble("Nfactor_De_Consumo"));
//                    var.setC_Nfactor_A_Reporte(rs.getDouble("Nfactor_A_Reporte"));
//                    var.setC_Nultimo_Soles(rs.getDouble("Nultimo_Soles"));
//                    var.setC_Nprec_Consumo(rs.getDouble("Nprec_Consumo"));
//                    var.setC_Nc_Alma(rs.getDouble("Nc_Alma"));
//                    var.setC_cajas(rs.getDouble("cajas"));
//                    var.setC_displays(rs.getDouble("displays"));
//                    var.setC_unidades(rs.getDouble("unidades"));
//                    var.setC_total(rs.getDouble("total"));
//                    var.setC_total_general(rs.getDouble("total_general"));
//                    var.setT_Fecha_de_vencimiento(rs.getNString("Fecha_de_vencimiento"));
//                    var.setC_Cprov_Id(rs.getNString("Cprov_Id"));
//                    var.setUni(!(1 == (var.getC_Nfactor_De_Consumo() / var.getC_Nfactor_De_Venta())));
////                var.setC_Fecha_de_vencimiento("Fecha_de_vencimiento");
//                    var.setC_Cprov_Nom(var.getLina_seleccionada());
//
//                    JTFCodigo.setEditable(false);
//
//                }
//
//            } catch (SQLException ex) {
//                Logger.getLogger(Recuento_con_fechas.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            jTFCajas.setEnabled(true);
//            jTFDisplays.setEnabled(true);
//
//            String sql = "DELETE FROM Recuento_fechas WHERE Secuencia='" + numero
//                    + "' and Fecha_recuento='" + var.getFecha_recuento_selecionada() + "'";
//            String sql1 = "select Nc_Alma,Nc_Alma1,Nc_Alma2 from sistema_fecha WHERE Fecha_recuento='"
//                    + var.getFecha_recuento_selecionada() + "' and Cprov_Nom='"
//                    + var.getLina_seleccionada() + "' and Cart_Id='" + codigo + "'";//8 campos
//            try {
//                // borrara el registro seleccionado
//                ps = var.conectar().prepareStatement(sql);
//                ps.executeUpdate();
//                // hasta aca borró el registro de recuento
//                // busca en sistemas el producto para restarle lo borrado
//                ps = var.conectar().prepareStatement(sql1);
//                ResultSet rs = ps.executeQuery();
//                while (rs.next()) {
//                    var.setC_Nc_Alma(rs.getDouble("Nc_Alma"));
//                    contado = rs.getDouble("Nc_Alma1");
//                    saldo = rs.getDouble("Nc_Alma2");
//                }
//                contado = contado - recu;
//                saldo = saldo + recu;
//                String sSQL = "UPDATE sistema_fecha SET "
//                        + "Nc_Alma1=?,Nc_Alma2=?"
//                        + " WHERE Cart_Id=? and Fecha_recuento='" + var.getFecha_recuento_selecionada() + "'";
//                ps = var.conectar().prepareStatement(sSQL);
//                ps.setDouble(1, contado);
//                ps.setDouble(2, saldo);
//                ps.setString(3, var.getC_Cart_Id());
//
//                if (ps.executeUpdate() > 0) {
//
//                    JOptionPane.showMessageDialog(null, "Los datos han sido modificados con éxito", "Operación Exitosa",
//                            JOptionPane.INFORMATION_MESSAGE);
//
//                } else {
//
//                    JOptionPane.showMessageDialog(null, "No se ha podido realizar la actualización de los datos\n"
//                            + "Inténtelo nuevamente.", "Error en la operación",
//                            JOptionPane.ERROR_MESSAGE);
//
//                }
//
//            } catch (SQLException ex) {
//                Logger.getLogger(Recuento_con_fechas.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            carga_tabla_lista();
//            carga_tabla_cuenta();
//
//        }
        jButton4.setEnabled(true);
        editar_campo();

    }//GEN-LAST:event_jBEditarActionPerformed

    private void JTFCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFCodigoActionPerformed

    }//GEN-LAST:event_JTFCodigoActionPerformed

    private void recalculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recalculaActionPerformed
        // TODO add your handling code here:
//        String sSQL = "UPDATE SISTEMA_FECHA cld "
//                + "SET Nc_Alma1="
//                + "("
//                + "SELECT DISTINCT SUM(TOTAL_GENERAL) "
//                + "FROM RECUENTO_FECHAS cle "
//                + "WHERE cle. FECHA_RECUENTO= cld. FECHA_RECUENTO "
//                + "and cle.CPROV_NOM =cld.CPROV_NOM "
//                + "and cle.CART_ID =cld.CART_ID "
//                + ")"
//                + "WHERE cld.FECHA_RECUENTO  = '" + var.getFecha_recuento_selecionada() + "'";

        String sql = "SELECT CART_ID,NC_ALMA FROM SISTEMA_FECHA  where CPROV_NOM ='" + var.getLina_seleccionada() + "' and FECHA_RECUENTO ='" + var.getFecha_recuento_selecionada() + "'";

        try {
            PreparedStatement ps = var.conectar().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String sql1 = "SELECT sum(TOTAL) suma "
                        + "FROM RECUENTO_FECHAS "
                        + "where CPROV_NOM ='" + var.getLina_seleccionada() + "' "
                        + "and FECHA_RECUENTO ='" + var.getFecha_recuento_selecionada() + "' "
                        + "and CART_ID ='" + rs.getNString("CART_ID") + "'";
                String codigo = rs.getNString("CART_ID");
                Double Almacen = rs.getDouble("NC_ALMA");
                PreparedStatement ps1 = var.conectar().prepareStatement(sql1);
                ResultSet rs1 = ps1.executeQuery();
                rs1.next();
                Double suma;
                String sSQL = "UPDATE sistema_fecha SET "
                        + "Nc_Alma1=?,Nc_Alma2=?"
                        + " WHERE Cart_Id=? and Fecha_recuento='" + var.getFecha_recuento_selecionada() + "'";
                PreparedStatement ps2 = var.conectar().prepareStatement(sSQL);
                Double saldo;
                if (rs1.wasNull()) {
                    suma = 0.0;
                } else {
                    suma = rs1.getDouble("suma");
                }
                saldo = Almacen - suma;
                ps2.setDouble(1, suma);
                ps2.setDouble(2, saldo);
                ps2.setString(3, codigo);
                ps2.executeUpdate();

            }

        } catch (SQLException ex) {
            Logger.getLogger(Recuento_con_fechas.class.getName()).log(Level.SEVERE, null, ex);
        }
        String sql1 = "update SISTEMA_FECHA SET Nc_Alma1=0 where NC_ALMA1 is null";
        try {
            PreparedStatement ps1 = var.conectar().prepareStatement(sql1);
            ps1.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(Recuento_con_fechas.class.getName()).log(Level.SEVERE, null, ex);
        }

        carga_tabla_lista();
        carga_tabla_cuenta();


    }//GEN-LAST:event_recalculaActionPerformed

    private void consultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_consultaActionPerformed

    private void JTFTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTFTotalActionPerformed

    private void Filra_los_que_cuaadranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Filra_los_que_cuaadranActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_Filra_los_que_cuaadranActionPerformed

    private void IgvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IgvActionPerformed
        // TODO add your handling code here:
        Calcula_totales();
        imprime_totales();
    }//GEN-LAST:event_IgvActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        actualiza();
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton Filra_los_que_cuaadran;
    private javax.swing.JCheckBox Igv;
    private javax.swing.JTextField JTFCodigo;
    private javax.swing.JTextField JTFTotal;
    private javax.swing.JToggleButton consulta;
    private javax.swing.JToggleButton filtra_sin_saldo;
    private javax.swing.JButton jBEditar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTFCajas;
    private javax.swing.JTextField jTFDisplays;
    private javax.swing.JTextField jTFUnidades;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField jtaño;
    private javax.swing.JTextField jtdia;
    private javax.swing.JTextField jtmes;
    private javax.swing.JButton recalcula;
    private javax.swing.JTextField txt_consulta;
    // End of variables declaration//GEN-END:variables

    private void Carga_componetes() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DecimalFormat formatea = var.MyFormatter();
        jComboBox1.removeAllItems();
        jButton2.setEnabled(false);
        jTFCajas.setText("0");
        jTFDisplays.setText("0");
        jTFUnidades.setText("0");
        jTFCajas.setEnabled(false);
        jTFDisplays.setEnabled(false);
        jTFUnidades.setEnabled(false);
        jtdia.setText(String.valueOf(var.getCal().get(Calendar.DATE)));
        jtmes.setText(String.valueOf(var.getCal().get(Calendar.MONTH)));
        jtaño.setText(String.valueOf(var.getCal().get(Calendar.YEAR)));
        txt_consulta.setText("");
        var.setFiltro_carga_tabla("");
        jTextField5.setText(String.valueOf(formatea.format(var.getTotalXlinea())));
        jTextField6.setText(String.valueOf(formatea.format(var.getTotal_contado())));
        jTextField7.setText(String.valueOf(formatea.format(var.getTotal_diferencia())));
        jComboBox4.removeAllItems();
        jComboBox4.addItem("PRECIO DE COMPRA");
        jComboBox4.addItem("PRECIO DE VENTA");

        try {

            String sql = "select DISTINCT Fecha_recuento from sistema_fecha";
            PreparedStatement ps = var.getCon().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                jComboBox1.addItem(rs.getNString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Borrar_por_fecha.class.getName()).log(Level.SEVERE, null, ex);
        }
//        Carga_lineas();
        carga_cabeceras2();
        carga_cabeceras1();

        jLabel9.setText("");
        jLabel7.setText("");

    }

    private void carga_cabeceras2() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//        TableModel modelo =jTable2.getModel();
        String[] colu = {"CODIGO", "DESCRIPCION", "CANTIDAD", "RECUENTO", "DIFERENCIA"};
        DefaultTableModel modelo;
        modelo = (DefaultTableModel) jTable2.getModel();
        modelo.setColumnIdentifiers(colu);

        borratabla(modelo);

        DefaultTableCellRenderer tcr;
        TableColumnModel columnModel = jTable2.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(80);
        columnModel.getColumn(1).setPreferredWidth(230);
        columnModel.getColumn(2).setPreferredWidth(80);
        columnModel.getColumn(3).setPreferredWidth(80);
        columnModel.getColumn(4).setPreferredWidth(80);
//        columnModel.getColumn(5).setPreferredWidth(90);
//        columnModel.getColumn(6).setPreferredWidth(90);
//        columnModel.getColumn(7).setPreferredWidth(60);
//        columnModel.getColumn(8).setPreferredWidth(90);
//        columnModel.getColumn(9).setPreferredWidth(90);
//        columnModel.getColumn(10).setPreferredWidth(90);
//        columnModel.getColumn(11).setPreferredWidth(90);
//        columnModel.getColumn(12).setPreferredWidth(90);
//        columnModel.getColumn(13).setPreferredWidth(90);

        tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.RIGHT); //CENTER o LEFT
        jTable2.getColumnModel().getColumn(2).setCellRenderer(tcr);
        jTable2.getColumnModel().getColumn(3).setCellRenderer(tcr);
        jTable2.getColumnModel().getColumn(4).setCellRenderer(tcr);
//        jTable1.getColumnModel().getColumn(7).setCellRenderer(tcr);
//        jTable1.getColumnModel().getColumn(8).setCellRenderer(tcr);
        jTable2.setModel(modelo);

    }

    private void borratabla(DefaultTableModel modelo) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        int a = modelo.getRowCount() - 1;
        for (int i = a; i >= 0; i--) {
            modelo.removeRow(i);
        }

    }

    private void carga_cabeceras1() {
        String[] colu = {"nn", "CODIGO", "DESCRIPCION", "CAJAS", "DISPLAYS", "UNIDADES", "TOTAL", "FECHA"};
        DefaultTableModel modelo;
        modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setColumnIdentifiers(colu);

        borratabla(modelo);

        DefaultTableCellRenderer tcr;
        TableColumnModel columnModel = jTable1.getColumnModel();
        columnModel.getColumn(1).setPreferredWidth(80);
        columnModel.getColumn(2).setPreferredWidth(230);
        columnModel.getColumn(3).setPreferredWidth(60);
        columnModel.getColumn(4).setPreferredWidth(60);
        columnModel.getColumn(5).setPreferredWidth(60);
        columnModel.getColumn(6).setPreferredWidth(60);
        columnModel.getColumn(7).setPreferredWidth(75);

        columnModel.getColumn(0).setPreferredWidth(0);
//        columnModel.getColumn(7).setPreferredWidth(60);
//        columnModel.getColumn(8).setPreferredWidth(90);
//        columnModel.getColumn(9).setPreferredWidth(90);
//        columnModel.getColumn(10).setPreferredWidth(90);
//        columnModel.getColumn(11).setPreferredWidth(90);
//        columnModel.getColumn(12).setPreferredWidth(90);
//        columnModel.getColumn(13).setPreferredWidth(90);

        tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.RIGHT); //CENTER o LEFT
        jTable1.getColumnModel().getColumn(3).setCellRenderer(tcr);
        jTable1.getColumnModel().getColumn(4).setCellRenderer(tcr);
        jTable1.getColumnModel().getColumn(5).setCellRenderer(tcr);
        jTable1.getColumnModel().getColumn(6).setCellRenderer(tcr);
//        jTable1.getColumnModel().getColumn(8).setCellRenderer(tcr);
        jTable1.setModel(modelo);

    }

    private void carga_datos() {
        cargadatos();
    }

    private void guarda() {
        int cajas, displays, unidades = 0;
        double total;
        int fila = jComboBox3.getSelectedIndex();
        String fe = jComboBox1.getSelectedItem().toString();
        var.setC_Cart_Id(resultados[fila][0]);
        var.setC_Cart_Nom(resultados[fila][1]);
        var.setC_Nfactor_De_Venta(Double.parseDouble(resultados[fila][2]));
        var.setC_Nfactor_De_Consumo(Double.parseDouble(resultados[fila][3]));
        var.setC_Nfactor_A_Reporte(Double.parseDouble(resultados[fila][4]));
        var.setC_Nultimo_Soles(Double.parseDouble(resultados[fila][5]));
        var.setC_Nprec_Consumo(Double.parseDouble(resultados[fila][6]));
        var.setC_Nc_Alma(Double.parseDouble(resultados[fila][7]));
        String startDate = resultados[fila][8];

        SimpleDateFormat sdf1 = new SimpleDateFormat("yyy-MM-dd");
        java.util.Date date;
        try {
            date = sdf1.parse(startDate);
            java.sql.Date sqlStartDate = new java.sql.Date(date.getTime());
            var.setC_Fecha_recuento(sqlStartDate);

        } catch (ParseException ex) {
            Logger.getLogger(Recuento_con_fechas.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTFCajas.setEnabled(true);
        jTFDisplays.setEnabled(true);
        boolean activo = (Objects.equals(var.getC_Nfactor_De_Consumo(), var.getC_Nfactor_De_Venta()));
        jTFUnidades.setEnabled(!activo);

        var.setC_cajas(Double.parseDouble(jTFCajas.getText()));
        var.setC_displays(Double.parseDouble(jTFDisplays.getText()));
        var.setC_unidades(Double.parseDouble(jTFUnidades.getText()));
        total = (var.getC_cajas() * var.getC_Nfactor_De_Consumo())
                + (var.getC_displays() * (var.getC_Nfactor_De_Consumo()
                / var.getC_Nfactor_De_Venta())) + var.getC_unidades();
        var.setC_total(total);
    }

    private void cargadatos() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        String fesel = jComboBox1.getSelectedItem().toString();
        String psel = jComboBox2.getSelectedItem().toString();
        String cdgo = JTFCodigo.getText();
        Boolean tiene_datos = false;
        String sql = "select Cart_Id,Cart_Nom from sistema_fecha WHERE Fecha_recuento='" + fesel + "' and "
                + "Cprov_Nom='" + psel + "' and Cart_Id like '%" + cdgo + "'";//8 campos
        jComboBox3.removeAllItems();

        PreparedStatement ps;

        ArrayList<String> codigos = new ArrayList<>();
        try {
            ps = var.getCon().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                tiene_datos = true;
                codigos.add(rs.getNString("Cart_Id"));
                jComboBox3.addItem(rs.getString("Cart_Nom"));
                var.setFiltro_carga_tabla(rs.getString("Cart_Nom").substring(0, 10));
            }
            carga_tabla_lista();
        } catch (SQLException ex) {
            Logger.getLogger(Recuento_con_fechas.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (tiene_datos) {

//                JOptionPane.showMessageDialog(null, "Los datos han sido modificados con éxito", "Operación Exitosa",
//                        JOptionPane.INFORMATION_MESSAGE);
        } else {

            JOptionPane.showMessageDialog(null, "El codigo que ha introducido no existe, \n"
                    + "Inténtelo nuevamente.", "Error en la operación",
                    JOptionPane.ERROR_MESSAGE);
            JTFCodigo.setText("");
            JTFCodigo.requestFocusInWindow();

        }
        var.setItemSel(jComboBox3.getSelectedIndex());
        var.setCodigos(codigos);
        DefaultTableModel modelo;
        modelo = (DefaultTableModel) jTable1.getModel();
        borratabla(modelo);

    }

    private void cargaProducto() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        String fesel = jComboBox1.getSelectedItem().toString();
        String psel = jComboBox2.getSelectedItem().toString();
        String cdgo = var.getCodigos().get(var.getItemSel());

        String sql = "select Cart_Id,Cart_Nom, Nfactor_De_Venta, Nfactor_De_Consumo, "
                + "Nfactor_A_Reporte, Nultimo_Soles, Nprec_Consumo, "
                + "Nc_Alma,Nc_Alma1 from sistema_fecha "
                + "WHERE Fecha_recuento='" + fesel + "' and "
                + "Cprov_Nom='" + psel + "' and Cart_Id= '" + cdgo + "'";//9 campos
        PreparedStatement ps;

//        int campos = 8 + 1;
        try {
            ps = var.getCon().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                var.setC_Cart_Id(rs.getNString("Cart_Id"));
                var.setC_Cart_Nom(rs.getNString("Cart_Nom"));
                var.setC_Nfactor_De_Venta(rs.getDouble("Nfactor_De_Venta"));
                var.setC_Nfactor_De_Consumo(rs.getDouble("Nfactor_De_Consumo"));
                var.setC_Nfactor_A_Reporte(rs.getDouble("Nfactor_A_Reporte"));
                var.setC_Nultimo_Soles(rs.getDouble("Nultimo_Soles"));
                var.setC_Nprec_Consumo(rs.getDouble("Nprec_Consumo"));
                var.setC_Nc_Alma(rs.getDouble("Nc_Alma"));
                var.setC_total_general(rs.getDouble("Nc_Alma1"));
                var.setUni(!(1 == (var.getC_Nfactor_De_Consumo() / var.getC_Nfactor_De_Venta())));
//                var.setC_Fecha_de_vencimiento("Fecha_de_vencimiento");
                var.setC_Cprov_Nom(psel);
            }

        } catch (SQLException ex) {
            Logger.getLogger(Recuento_con_fechas.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTFCajas.setEnabled(true);
        jTFDisplays.setEnabled(true);
        DefaultTableModel modelo;
        modelo = (DefaultTableModel) jTable1.getModel();
        borratabla(modelo);
        carga_tabla_lista();

    }

    private void activa_ingresos() {
        boolean uni;
        uni = !(1 == (var.getC_Nfactor_De_Consumo() / var.getC_Nfactor_De_Venta()));
        jTFCajas.setEnabled(true);
        jTFDisplays.setEnabled(true);
        jTFUnidades.setEnabled(uni);
        jButton2.setEnabled(true);
        var.setUni(uni);
        jTFUnidades.setEnabled(uni);

    }

    private void calcula() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//        Double IGV=1.0;
//        if(Igv.isSelected())
//        {
//            IGV=1.18;
//        }
        var.setC_cajas(Double.parseDouble(jTFCajas.getText()));
        var.setC_displays(Double.parseDouble(jTFDisplays.getText()));
        var.setC_unidades(Double.parseDouble(jTFUnidades.getText()));
        double toto = ((var.getC_cajas() * var.getC_Nfactor_De_Consumo())
                + (var.getC_displays() * (var.getC_Nfactor_De_Consumo() / var.getC_Nfactor_De_Venta()))
                + var.getC_unidades());
        var.setC_total(toto);
        toto = toto + var.getC_total_general();
        var.setC_total_general(toto);

    }

    private void guarda_cuenta() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        String SSQL;

        if (!var.getEditando()) {


            SSQL = "INSERT INTO Recuento_fechas ("
                    
                    + "Secuencia,"//1
                    + "Cart_Id,"
                    + "Cart_Nom,"
                    + "Nfactor_De_Venta,"
                    + "Nfactor_De_Consumo,"
                    + "Nfactor_A_Reporte,"
                    + "Nultimo_Soles,"
                    + "Nprec_Consumo,"
                    + "Nc_Alma,"
                    + "cajas,"
                    + "displays,"
                    + "unidades,"
                    + "total,"//13
                    + "total_general,"
                    + "Fecha_de_vencimiento,"//15
                    + "Fecha_recuento,"
                    + "Cprov_Id,"
                    + "Cprov_Nom) "
                    + "VALUES (?,?, ?, ?, ?, ?, ?,?,?,?,?,?,?,?,?,?,?,?)";

        } else {
            SSQL = "update Recuento_fechas set "
                    + "Cart_Id=?,"
                    + "Cart_Nom=?,"
                    + "Nfactor_De_Venta=?,"
                    + "Nfactor_De_Consumo=?,"
                    + "Nfactor_A_Reporte=?,"
                    + "Nultimo_Soles=?,"
                    + "Nprec_Consumo=?,"
                    + "Nc_Alma=?,"
                    + "cajas=?,"
                    + "displays=?,"
                    + "unidades=?,"
                    + "total=?,"//13
                    + "total_general=?,"
                    + "Fecha_de_vencimiento=?,"//15
                    + "Fecha_recuento=?,"
                    + "Cprov_Id=?,"
                    + "Cprov_Nom=? "
                    + "where Secuencia=?";
        }

        try {

            if (var.getEditando()) {
                PreparedStatement ps = var.conectar().prepareStatement(SSQL);
//            var.setSecuencia(var.getSecuencia() + 1);

                ps.setString(1, var.getC_Cart_Id());
                ps.setString(2, var.getC_Cart_Nom());
                ps.setDouble(3, var.getC_Nfactor_De_Venta());
                ps.setDouble(4, var.getC_Nfactor_De_Consumo());
                ps.setDouble(5, var.getC_Nfactor_A_Reporte());
                ps.setDouble(6, var.getC_Nultimo_Soles());
                ps.setDouble(7, var.getC_Nprec_Consumo());
                ps.setDouble(8, var.getC_Nc_Alma());
                ps.setDouble(9, var.getC_cajas());
                ps.setDouble(10, var.getC_displays());
                ps.setDouble(11, var.getC_unidades());
                ps.setDouble(12, var.getC_total());
                ps.setDouble(13, var.getC_total_general());
                ps.setDate(14, var.fecFormatoDate(var.getT_Fecha_de_vencimiento()));
                ps.setDate(15, var.fecFormatoDate(var.getFecha_recuento_selecionada()));
                ps.setString(16, var.getC_Cprov_Id());
                ps.setString(17, var.getLina_seleccionada());
                ps.setInt(18, var.getSecuencia());
                ps.executeUpdate();

            } else {
                PreparedStatement ps = var.conectar().prepareStatement(SSQL);
                var.setSecuencia(var.getSecuencia() + 1);
                ps.setInt(1, var.getSecuencia());
                ps.setString(2, var.getC_Cart_Id());
                ps.setString(3, var.getC_Cart_Nom());
                ps.setDouble(4, var.getC_Nfactor_De_Venta());
                ps.setDouble(5, var.getC_Nfactor_De_Consumo());
                ps.setDouble(6, var.getC_Nfactor_A_Reporte());
                ps.setDouble(7, var.getC_Nultimo_Soles());
                ps.setDouble(8, var.getC_Nprec_Consumo());
                ps.setDouble(9, var.getC_Nc_Alma());
                ps.setDouble(10, var.getC_cajas());
                ps.setDouble(11, var.getC_displays());
                ps.setDouble(12, var.getC_unidades());
                ps.setDouble(13, var.getC_total());
                ps.setDouble(14, var.getC_total_general());
                ps.setDate(15, var.fecFormatoDate(var.getT_Fecha_de_vencimiento()));
                ps.setDate(16, var.fecFormatoDate(var.getFecha_recuento_selecionada()));
                ps.setString(17, var.getC_Cprov_Id());
                ps.setString(18, var.getLina_seleccionada());
                ps.executeUpdate();
            }

        } catch (SQLException ex) {
            Logger.getLogger(Recuento_con_fechas.class.getName()).log(Level.SEVERE, null, ex);
        }

        // actualiza la base sistemas
//        java.sql.Date sDate;
        String sSQL = "UPDATE sistema_fecha SET "
                + "Nc_Alma1=?,Nc_Alma2=?"
                + " WHERE Cart_Id=? and Fecha_recuento='" + var.getFecha_recuento_selecionada() + "'";

        try {
            PreparedStatement ps = var.conectar().prepareStatement(sSQL);
            ps.setDouble(1, var.getC_total_general());
            ps.setDouble(2, var.getC_Nc_Alma() - var.getC_total_general());
            ps.setString(3, var.getC_Cart_Id());

            if (ps.executeUpdate() > 0) {

                JOptionPane.showMessageDialog(null, "Los datos han sido modificados con éxito", "Operación Exitosa",
                        JOptionPane.INFORMATION_MESSAGE);

            } else {

                JOptionPane.showMessageDialog(null, "No se ha podido realizar la actualización de los datos\n"
                        + "Inténtelo nuevamente.", "Error en la operación",
                        JOptionPane.ERROR_MESSAGE);

            }
            var.setActualizo(true);

        } catch (SQLException ex) {
            Logger.getLogger(Recuento_con_fechas.class.getName()).log(Level.SEVERE, null, ex);
            var.setActualizo(false);

        }
        carga_tabla_lista();
    }

    private void carga_tabla_lista() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DecimalFormat formatea = var.MyFormatter();

        String sql = "select Cart_Id,Cart_Nom,Nc_Alma,Nc_Alma1,Nc_Alma2 "
                + "from sistema_fecha "
                + "WHERE Fecha_recuento='" + var.getFecha_recuento_selecionada() + ""
                + "' and Cprov_Nom='" + var.getLina_seleccionada() + "'"
                + " AND Cart_Nom like '%" + var.getFiltro_carga_tabla() + "%'";

        jLabel7.setText(var.getLina_seleccionada());
        jLabel9.setText(var.getFecha_recuento_selecionada());
        try {
            PreparedStatement ps = var.getCon().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel modelo;
            modelo = (DefaultTableModel) jTable2.getModel();
            borratabla(modelo);
            int colu = 5;
            Object[] fila = new Object[colu]; // Hay tres columnas en la tabla
//            DecimalFormat formatea = var.MyFormatter();
            while (rs.next()) {
                fila[0] = rs.getString(1);
                fila[1] = rs.getString(2);
                fila[2] = formatea.format(rs.getDouble(3));
                fila[3] = formatea.format(rs.getDouble(4));
                fila[4] = formatea.format(Double.parseDouble(rs.getNString(3)) - Double.parseDouble(rs.getNString(4)));
                modelo.addRow(fila);
            }
            jTable2.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(Borrar_por_fecha.class.getName()).log(Level.SEVERE, null, ex);
        }
        Calcula_totales();

        imprime_totales();

        carga_tabla_cuenta();
    }

    private void carga_tabla_cuenta() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.

        String sql = "select Secuencia,Cart_Id,Cart_Nom,cajas,displays,unidades,total,Fecha_de_vencimiento "
                + "from Recuento_fechas WHERE Fecha_recuento='"
                + var.getFecha_recuento_selecionada()
                + "' and Cprov_Nom='" + var.getLina_seleccionada() + "' order by Secuencia desc";
        jLabel7.setText(var.getLina_seleccionada());
        jLabel9.setText(var.getFecha_recuento_selecionada());
        try {
            PreparedStatement ps = var.getCon().prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel modelo;
            modelo = (DefaultTableModel) jTable1.getModel();
            borratabla(modelo);
            int colu = 8;
            Object[] fila = new Object[colu]; // Hay tres columnas en la tabla
            DecimalFormat formatea = var.MyFormatter();
            DecimalFormat fen = var.MyFormatter();
            int secu = 0;
            while (rs.next()) {
                secu = rs.getInt("Secuencia");

                if (var.getSecuencia() < secu) {
                    var.setSecuencia(rs.getInt("Secuencia"));
                }
                fila[0] = rs.getString("Secuencia");
                fila[1] = rs.getString("Cart_Id");
                fila[2] = rs.getString("Cart_Nom");
                fila[3] = fen.format(rs.getDouble("cajas"));
                fila[4] = fen.format(rs.getDouble("displays"));
                fila[5] = fen.format(rs.getDouble("unidades"));
                fila[6] = formatea.format(rs.getDouble("total"));
                fila[7] = rs.getString("Fecha_de_vencimiento");
                modelo.addRow(fila);
            }
            jTable1.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(Borrar_por_fecha.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void borra() {

    }

    private void Carga_lineas() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        String selecion = "";
        jComboBox2.removeAllItems();
        try {

            selecion = jComboBox1.getSelectedItem().toString();

            String sql1 = "select DISTINCT Cprov_Nom nvarchar from sistema_fecha WHERE Fecha_recuento = '" + selecion + "'";
            PreparedStatement ps3 = var.getCon().prepareStatement(sql1);
            ResultSet rs3 = ps3.executeQuery();
            while (rs3.next()) {
                jComboBox2.addItem(rs3.getNString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Borrar_por_fecha.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void Calcula_totales() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        Double IGV = 1.00;
        if (Igv.isSelected()) {
            IGV = 1.18;
        }
        String sqls = "SELECT SUM(Nultimo_Soles*NC_ALMA),SUM(Nultimo_Soles*NC_ALMA1) "
                + "FROM SISTEMA_FECHA  "
                + "where fecha_recuento='" + var.getFecha_recuento_selecionada().trim() + "' and  cprov_nom = '" + var.getLina_seleccionada().trim() + "'";
        try {
            PreparedStatement psr = var.conectar().prepareStatement(sqls);
            ResultSet rsr = psr.executeQuery();
            while (rsr.next()) {
                var.setTotalXlinea(rsr.getDouble(1) * IGV);
                var.setTotal_contado(rsr.getDouble(2) * IGV);
                var.setTotal_diferencia(var.getTotalXlinea() - var.getTotal_contado());
            }
        } catch (SQLException ex) {
            Logger.getLogger(Recuento_con_fechas.class.getName()).log(Level.SEVERE, null, ex);
        }
        sqls = "SELECT sum (total*Nultimo_Soles) FROM RECUENTO_FECHAS  where FECHA_DE_VENCIMIENTO <= '" + var.getFecha_recuento_selecionada() + "' and FECHA_RECUENTO='" + var.getFecha_recuento_selecionada() + "'";

        try {
            PreparedStatement psr = var.conectar().prepareStatement(sqls);
            ResultSet rsr = psr.executeQuery();
            while (rsr.next()) {
                var.setTotal_vencido(rsr.getDouble(1));
                var.setTotal_vencido(var.getTotal_vencido() * IGV);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Recuento_con_fechas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void imprime_totales() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DecimalFormat formatea = var.MyFormatter();

        jTextField5.setText(String.valueOf(formatea.format(var.getTotalXlinea())));
        jTextField6.setText(String.valueOf(formatea.format(var.getTotal_contado())));
        jTextField7.setText(String.valueOf(formatea.format(var.getTotal_diferencia())));
        jTextField9.setText(String.valueOf(formatea.format(var.getTotal_vencido())));
    }

    private void Componentes_SetEnable(boolean b) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.

        recalcula.setEnabled(b);
        filtra_sin_saldo.setEnabled(b);
        Filra_los_que_cuaadran.setEnabled(b);
        Igv.setEnabled(b);
        consulta.setEnabled(b);
        txt_consulta.setEnabled(b);
        jComboBox4.setEnabled(b);
    }

    private void editar_campo() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        var.setEditando(true);
        JTFCodigo.setEnabled(false);
//        jTextField1.setEditable(true);
        int fila;
        PreparedStatement ps;
//        fila = jTable1.getSelectedRow();
        DefaultTableModel tm = (DefaultTableModel) jTable1.getModel();

        fila = jTable1.getSelectedRow();
        String numero = String.valueOf(tm.getValueAt(jTable1.getSelectedRow(), 0));
//        String numero = (String) jTable1.getValueAt(fila, 0);
            String fsel=jComboBox1.getSelectedItem().toString();
        String sql = "SELECT * FROM RECUENTO_FECHAS where secuencia='" + numero + "' and FECHA_RECUENTO  ='"+fsel+"'";
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila.");
        } else {
//        String sql="insert INTO CARGO (cod,nombre) VALUES ('"+codn+"','"+jTextField1.getText().toUpperCase().trim()+"' )";
            try {
                ps = var.conectar().prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                rs.next();
                var.setC_Cart_Id(rs.getNString("Cart_Id"));
                var.setC_Cart_Nom(rs.getNString("Cart_Nom"));
                var.setC_Nfactor_De_Venta(rs.getDouble("Nfactor_De_Venta"));
                var.setC_Nfactor_De_Consumo(rs.getDouble("Nfactor_De_Consumo"));
                var.setC_Nfactor_A_Reporte(rs.getDouble("Nfactor_A_Reporte"));
                var.setC_Nultimo_Soles(rs.getDouble("Nultimo_Soles"));
                var.setC_Nprec_Consumo(rs.getDouble("Nprec_Consumo"));
                var.setC_Nc_Alma(rs.getDouble("Nc_Alma"));
                var.setC_cajas(rs.getDouble("cajas"));
                var.setC_displays(rs.getDouble("displays"));
                var.setC_unidades(rs.getDouble("unidades"));
                var.setC_total(rs.getDouble("total"));
                var.setC_total_general(rs.getDouble("total_general"));
                var.setT_Fecha_de_vencimiento(rs.getNString("Fecha_de_vencimiento"));
                var.setC_Cprov_Id(rs.getNString("Cprov_Id"));
                var.setUni(!(1 == (var.getC_Nfactor_De_Consumo() / var.getC_Nfactor_De_Venta())));
//                var.setC_Fecha_de_vencimiento("Fecha_de_vencimiento");
                var.setC_Cprov_Nom(var.getLina_seleccionada());
                carga_en_pantalla();
            } catch (SQLException ex) {
                Logger.getLogger(Cargos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
//        jTextField1.requestFocusInWindow();
//        inicia_todo();
//            var.setEditando(false);
    String sSQL = "UPDATE sistema_fecha SET "
                + "Nc_Alma1=?,Nc_Alma2=?"
                + " WHERE Cart_Id=? and Fecha_recuento='" + var.getFecha_recuento_selecionada() + "'";

        try {
            ps = var.conectar().prepareStatement(sSQL);
            ps.setDouble(1, var.getC_total_general());
            ps.setDouble(2, var.getC_Nc_Alma() + var.getC_total_general());
            ps.setString(3, var.getC_Cart_Id());

            if (ps.executeUpdate() > 0) {

                JOptionPane.showMessageDialog(null, "Los datos han sido modificados con éxito", "Operación Exitosa",
                        JOptionPane.INFORMATION_MESSAGE);

            } else {

                JOptionPane.showMessageDialog(null, "No se ha podido realizar la actualización de los datos\n"
                        + "Inténtelo nuevamente.", "Error en la operación",
                        JOptionPane.ERROR_MESSAGE);

            }
            var.setActualizo(true);

        } catch (SQLException ex) {
            Logger.getLogger(Recuento_con_fechas.class.getName()).log(Level.SEVERE, null, ex);
            var.setActualizo(false);

        }
        
    }

    private void carga_en_pantalla() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        JTFCodigo.setText(var.getC_Cart_Id());
        jComboBox3.removeAllItems();
        jComboBox3.addItem(var.getC_Cart_Nom());
        System.out.print(var.getT_Fecha_de_vencimiento().substring(5, 7));
        jtdia.setText(var.getT_Fecha_de_vencimiento().substring(8, 10));
        jtmes.setText(var.getT_Fecha_de_vencimiento().substring(5, 7));
        jtaño.setText(var.getT_Fecha_de_vencimiento().substring(0, 4));
        jTFCajas.setText(var.getC_cajas().toString());
        jTFDisplays.setText(var.getC_displays().toString());
        jTFUnidades.setText(var.getC_unidades().toString());
        jTFCajas.setEnabled(true);
        jTFDisplays.setEnabled(true);
        
        
        
        
    }

    private void actualiza() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        
        
        
        
        
    }
}
